{"version":3,"sources":["assets/images/car.png","assets/images/men.png","assets/images/women.png","components/home.jsx","types/index.js","components/navBar.jsx","components/mobileNavBar.jsx","components/mobileSideMenu.jsx","actions/index.js","operations/operations.js","components/login.jsx","components/account.jsx","App.js","serviceWorker.js","reducers/userInfo.js","reducers/index.js","index.js"],"names":["module","exports","Home","history","useHistory","redirectToPage","tag","push","className","src","require","alt","onClick","connect","state","userInfo","UserInfo","inputValueRef","useRef","to","type","ref","placeholder","onChange","console","log","current","value","icon","faUser","size","isLogged","faSignInAlt","faShoppingCart","username","toUpperCase","slice","length","openSideMenu","faBars","MobileSideMenu","closeSideMenu","faTimes","SaveUser","email","getUserfromApi","password","axios","post","then","response","data","accessToken","refreshToken","success","catch","err","dispatch","getUserFromServer","a","user","getUser","usernameRef","passwordRef","login","e","preventDefault","toLowerCase","id","name","invalidUser","Account","useState","setData","fetchData","fetch","json","useEffect","style","display","justifyContent","alignItems","App","props","setState","sideMenuOpen","document","body","overflow","title","this","authenticateUser","path","exact","render","React","Component","method","res","auth","userEmail","Boolean","window","location","hostname","match","userState","action","logged","allReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c89b6c5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car.51378c37.png\";","module.exports = __webpack_public_path__ + \"static/media/men.f8f3cc52.png\";","module.exports = __webpack_public_path__ + \"static/media/women.7cfda651.png\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MEN, WOMEN } from \"../types\";\n\nconst Home = () => {\n  let history = useHistory();\n\n  const redirectToPage = (tag) => history.push(`/${tag}`);\n\n  return (\n    <div className=\"content\">\n      <div className=\"home-container\">\n        <section className=\"top-home-container\">\n          <div className=\"top-home-image\">\n            <div className=\"top-home-background\"></div>\n            <div className=\"top-home-image-text\">\n              <h1>WITAJ W SKLEPIE!</h1>\n              <p>SPRAWDŹ NASZE WSZYSTKIE PRODUKTY.</p>\n            </div>\n            <div className=\"top-image-holder\">\n              <img src={require(\"../assets/images/car.png\")} alt=\"Top\" />\n            </div>\n          </div>\n        </section>\n        <section className=\"bottom-home-container\">\n          <div className=\"bottom-men-box\" onClick={() => redirectToPage(MEN)}>\n            <div className=\"bottom-men-image-text\">\n              <h1>MĘŻCZYŹNI</h1>\n            </div>\n            <div className=\"men-image-up\"></div>\n            <img src={require(\"../assets/images/men.png\")} alt=\"Men\" />\n          </div>\n          <div\n            className=\"bottom-women-box\"\n            onClick={() => redirectToPage(WOMEN)}\n          >\n            <div className=\"bottom-women-image-text\">\n              <h1>KOBIETY</h1>\n            </div>\n            <div className=\"women-image-up\"></div>\n            <img src={require(\"../assets/images/women.png\")} alt=\"Women\" />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","// UserInfo reducer\nexport const SAVE_USER = \"SAVE_USER\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const INVALID_USER = \"INVALID_USER\";\n\n//Rest of types\nexport const MEN = \"men\";\nexport const WOMEN = \"women\";\n","import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//Font Awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\n\nconst NavBar = ({ userInfo }) => {\n  const inputValueRef = useRef();\n\n  const handlerSearchInput = () => {\n    console.log(inputValueRef.current.value);\n  };\n\n  return (\n    <div className=\"header-container\">\n      <header>\n        <section className=\"top-header\">\n          <div className=\"brand-logo\">\n            <Link to=\"/Shop-Project/\">\n              <h1>SHOPI</h1>\n            </Link>\n          </div>\n          <div className=\"search-bar-header\">\n            <input\n              type=\"text\"\n              ref={inputValueRef}\n              placeholder=\"Wyszukaj produkt\"\n              onChange={handlerSearchInput}\n            />\n            <button type=\"submit\">Szukaj</button>\n          </div>\n          <div className=\"right-center\">\n            <div className=\"user-login-center\">\n              <Link to=\"/account\">\n                <FontAwesomeIcon icon={faUser} size=\"1x\" />\n                <p>Twoje konto</p>\n              </Link>\n            </div>\n            {!userInfo.isLogged ? (\n              <div className=\"user-register-center\">\n                <Link to=\"/register\">\n                  <FontAwesomeIcon icon={faSignInAlt} size=\"1x\" />\n                  <p>Zarejestruj się</p>\n                </Link>\n              </div>\n            ) : null}\n            <div className=\"cart-center\">\n              <Link to=\"/cart\">\n                <FontAwesomeIcon icon={faShoppingCart} size=\"1x\" />\n                <p>Koszyk</p>\n              </Link>\n            </div>\n            {userInfo.isLogged && userInfo.username ? (\n              <div className=\"user-nickname-center\">\n                <h1>Witaj,</h1>\n                <p>\n                  {userInfo?.username[0].toUpperCase()}\n                  {userInfo?.username.slice(1, userInfo.username.length)}!\n                </p>\n              </div>\n            ) : null}\n          </div>\n        </section>\n        <section className=\"bottom-header\">\n          <nav>\n            <ul>\n              <Link to=\"/men\">\n                <li>MĘŻCZYŹNI</li>\n              </Link>\n              <Link to=\"/women\">\n                <li>KOBIETY</li>\n              </Link>\n              {/* <Link to='/shoes'><li>OBUWIE</li></Link> */}\n              <Link to=\"/accesories\">\n                <li>AKCESORIA</li>\n              </Link>\n              {/* <Link to='/aboutus'><li>O NAS</li></Link> */}\n              <Link to=\"/contact\">\n                <li>KONTAKT</li>\n              </Link>\n            </ul>\n          </nav>\n        </section>\n      </header>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.UserInfo,\n});\n\nexport default connect(mapStateToProps, {})(NavBar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//Font Awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n// import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from \"react-redux\";\n\nconst MobileNavBar = ({ openSideMenu, userInfo }) => {\n  // const inputValueRef = useRef();\n\n  // const handlerSearchInput = () => {\n  //     console.log(inputValueRef.current.value)\n  // }\n  // const run = () => {\n  //     console.log('working')\n  // }\n\n  return (\n    <div className=\"mobile-header-container\">\n      <header className=\"mobile-header\">\n        <section className=\"top-header\">\n          <div className=\"brand-logo\">\n            <Link to=\"/Shop-Project/\">\n              <h1>SHOPI</h1>\n            </Link>\n          </div>\n          <div className=\"right-center\">\n            <div className=\"user-login-center\">\n              <Link to=\"/account\">\n                <FontAwesomeIcon icon={faUser} size=\"1x\" />\n                <p>Twoje konto</p>\n              </Link>\n            </div>\n            {!userInfo.isLogged ? (\n              <div className=\"user-register-center\">\n                <Link to=\"/register\">\n                  <FontAwesomeIcon icon={faSignInAlt} size=\"1x\" />\n                  <p>Zarejestruj się</p>\n                </Link>\n              </div>\n            ) : null}\n            <div className=\"cart-center\">\n              <Link to=\"/cart\">\n                <FontAwesomeIcon icon={faShoppingCart} size=\"1x\" />\n                <p>Koszyk</p>\n              </Link>\n            </div>\n            {userInfo.isLogged && userInfo.username ? (\n              <div className=\"user-nickname-center\">\n                <h1>Witaj,</h1>\n                <p>\n                  {userInfo.username[0].toUpperCase()}\n                  {userInfo.username.slice(1, userInfo.username.length)}!\n                </p>\n              </div>\n            ) : null}\n          </div>\n        </section>\n        <section className=\"bottom-mobile-menu\">\n          <FontAwesomeIcon icon={faBars} onClick={openSideMenu} />\n        </section>\n      </header>\n      {/* <div className='mobile-side-menu'>\n                <div className='mobile-side-dark'></div>\n                <div className='mobile-side-menu-light'>\n                    <div className='mobile-side-menu-top-close'>\n                        <FontAwesomeIcon icon={faTimes} size='1x' />\n                    </div>\n                    <nav>\n                        <ul>\n                            <Link to='/men'><li>MĘŻCZYŹNI</li></Link>\n                            <Link to='/women'><li>KOBIETY</li></Link>\n                            <Link to='/accesories'><li>AKCESORIA</li></Link>\n                            <Link to='/contact'><li>KONTAKT</li></Link>\n                        </ul>\n                    </nav>\n                </div>\n            </div> */}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.UserInfo,\n});\n\nexport default connect(mapStateToProps, {})(MobileNavBar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MobileSideMenu = ({ closeSideMenu }) => {\n  return (\n    <div className=\"mobile-side-menu\">\n      <div className=\"mobile-side-dark\"></div>\n      <div className=\"mobile-side-menu-light\">\n        <div className=\"mobile-side-menu-top-close\">\n          <FontAwesomeIcon icon={faTimes} size=\"1x\" onClick={closeSideMenu} />\n        </div>\n        <nav>\n          <ul>\n            <Link to=\"/men\">\n              <li>MĘŻCZYŹNI</li>\n            </Link>\n            <Link to=\"/women\">\n              <li>KOBIETY</li>\n            </Link>\n            <Link to=\"/accesories\">\n              <li>AKCESORIA</li>\n            </Link>\n            <Link to=\"/contact\">\n              <li>KONTAKT</li>\n            </Link>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileSideMenu;\n","// import { bindActionCreators } from 'redux';\n\nimport { INVALID_USER, SAVE_USER, SIGN_OUT } from \"../types\";\n\nconst SaveUser = (username, email) => {\n  return {\n    type: SAVE_USER,\n    username: username,\n    email: email,\n  };\n};\nconst InvalidUser = () => {\n  return {\n    type: INVALID_USER,\n  };\n};\n\nconst SignOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\n// const actions = bindActionCreators({ getUser })\n\nexport { SaveUser, InvalidUser, SignOut };\n","import axios from \"axios\";\nimport { SaveUser, InvalidUser, SignOut } from \"../actions/index\";\n\nconst getUserfromApi = (username, password) => {\n  return axios\n    .post(\"/api/user/auth/login\", {\n      username: username,\n      password: password,\n    })\n    .then((response) => {\n      console.log(response);\n      const { accessToken, refreshToken, success } = response.data;\n      if (accessToken && refreshToken && success) return true;\n      else return false;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getUser = (username, password) => {\n  return async (dispatch) => {\n    const user = await getUserfromApi(username, password);\n    if (user) {\n      dispatch(SaveUser(user.username, user.email));\n    } else {\n      dispatch(InvalidUser());\n    }\n  };\n};\n\nconst authenticateFetch = () => {\n  return fetch(\"/api/user/auth/authenticate\", { method: \"POST\" })\n    .then((res) => res.json())\n    .catch((err) => console.log(err));\n};\n\nexport const authenticate = () => {\n  return async (dispatch) => {\n    const auth = await authenticateFetch();\n\n    if (auth.user) {\n      dispatch(SaveUser(auth.user.username, auth.user.userEmail));\n    } else {\n      dispatch(SignOut());\n    }\n  };\n};\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../operations/operations\";\n\nconst LoginPage = ({ userInfo, getUserFromServer }) => {\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  const login = async (e) => {\n    e.preventDefault();\n    getUserFromServer(\n      usernameRef.current.value.toLowerCase(),\n      passwordRef.current.value\n    );\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-area\">\n        <div className=\"login-page-title\">\n          <h1>Zaloguj się</h1>\n        </div>\n        <div className=\"login-box\">\n          <div className=\"login-main-box\">\n            <div className=\"login-main-box-title\">\n              <h1>Logowanie</h1>\n            </div>\n            <form id=\"loginForm\">\n              <label>Nazwa użytkownika</label>\n              <input\n                type=\"text\"\n                name=\"inputUsername\"\n                placeholder=\"Nazwa użytkownika\"\n                ref={usernameRef}\n              />\n              <label>Hasło</label>\n              <input\n                type=\"password\"\n                name=\"inputPassword\"\n                placeholder=\"Hasło\"\n                ref={passwordRef}\n              />\n              <button type=\"submit\" onClick={login}>\n                Zaloguj\n              </button>\n              {userInfo.invalidUser ? <p>Błędny login lub hasło.</p> : null}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.UserInfo,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserFromServer: (username, password) =>\n    dispatch(getUser(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React, { useEffect, useState } from \"react\";\n\nconst Account = () => {\n  const [data, setData] = useState(null);\n\n  const fetchData = async () => {\n    // const url = \"https://www.instagram.com/adam_andrys/?__a=1\";\n    const url = \"/api/user/list2\";\n    const response = await fetch(url);\n    const data = await response.json();\n    setData(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (!data) {\n    return (\n      <div\n        className=\"account-container\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"account-container\">\n      <h1>Welcome to your account</h1>\n      <button\n        onClick={() => {\n          console.log(data);\n        }}\n      >\n        Click!\n      </button>\n      <p>Username: {data.username}</p>\n      <p>Title: </p>\n    </div>\n  );\n};\n\nexport default Account;\n","import React from \"react\";\nimport \"./styles/styles.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n//Components\nimport Home from \"./components/home\";\nimport NavBar from \"./components/navBar\";\nimport MobileNavBar from \"./components/mobileNavBar\";\nimport MobileSideMenu from \"./components/mobileSideMenu\";\nimport LoginPage from \"./components/login\";\nimport Account from \"./components/account\";\nimport { authenticate } from \"./operations/operations\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"App\",\n      sideMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.authenticateUser();\n  }\n\n  openSideMenu = () => {\n    this.setState({\n      sideMenuOpen: !this.state.sideMenuOpen,\n    });\n    document.body.style.overflow = this.state.sideMenuOpen ? \"\" : \"hidden\";\n  };\n\n  render() {\n    const { sideMenuOpen } = this.state;\n    const { userInfo } = this.props;\n\n    return (\n      <Router>\n        {/* <div className=\"container\"> */}\n        {sideMenuOpen ? (\n          <MobileSideMenu closeSideMenu={this.openSideMenu} />\n        ) : null}\n        <MobileNavBar openSideMenu={this.openSideMenu} />\n        <NavBar />\n        <Switch>\n          <Route\n            path=\"/Shop-Project/\"\n            exact\n            render={(props) => <Home {...props} />}\n          />\n          <Route\n            path=\"/account\"\n            exact\n            render={(props) =>\n              userInfo.isLogged ? (\n                <Account {...props} />\n              ) : (\n                <LoginPage {...props} />\n              )\n            }\n          />\n        </Switch>\n        {/* </div> */}\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.UserInfo,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  authenticateUser: () => dispatch(authenticate()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { INVALID_USER, SAVE_USER, SIGN_IN, SIGN_OUT } from \"../types\";\n\nconst userState = {\n  email: null,\n  username: null,\n  isLogged: false,\n  invalidUser: false,\n};\n\nconst UserInfo = (state = userState, action) => {\n  switch (action.type) {\n    case SAVE_USER:\n      return {\n        ...state,\n        email: action.email,\n        username: action.username,\n        isLogged: true,\n        invalidUser: false,\n      };\n    case SIGN_IN:\n      return {\n        ...state,\n        logged: true,\n        invalidUser: false,\n      };\n    case SIGN_OUT:\n      return {\n        ...state,\n        logged: false,\n        invalidUser: false,\n      };\n    case INVALID_USER:\n      return {\n        ...state,\n        email: null,\n        username: null,\n        isLogged: false,\n        invalidUser: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default UserInfo;\n","import UserInfo from \"./userInfo\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({ UserInfo });\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  allReducers,\n  composeWithDevTools(applyMiddleware(thunk))\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}